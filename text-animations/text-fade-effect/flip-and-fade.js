// Generated by CoffeeScript 1.9.2
(function() {
  var byClass, code, count, delay, doc, fadeIn, float, i, int, j, k, l, len, len1, len2, len3, log, new_string, rand, randFloat, randInt, ref, ref1, ref2, s, str, t, transform;

  doc = document;

  str = function(s) {
    return s.toString();
  };

  float = function(o) {
    return parseFloat(o);
  };

  int = function(o) {
    return parseInt(o);
  };

  len = function(o) {
    return o.length;
  };

  byClass = function(n) {
    return doc.getElementsByClassName(n);
  };

  log = function(s) {
    return console.log(s);
  };

  delay = function(ms, func) {
    return setTimeout(func, ms);
  };

  rand = function() {
    return Math.random();
  };

  randInt = function(min, max) {
    if (min == null) {
      min = 0;
    }
    if (max == null) {
      max = rand() * 10;
    }
    return int(min + (rand() * (max - min)));
  };

  randFloat = function(min, max) {
    if (min == null) {
      min = 0;
    }
    if (max == null) {
      max = rand();
    }
    return min + (rand() * (max - min));
  };

  transform = function(e, s) {
    if (s == null) {
      s = "";
    }
    e.style.webkitTransform = s;
    e.style.MozTransform = s;
    e.style.msTransform = s;
    e.style.OTransform = s;
    e.style.transform = s;
  };

  ref = byClass('flipfade');
  for (j = 0, len1 = ref.length; j < len1; j++) {
    i = ref[j];
    new_string = "";
    code = i.innerHTML;
    ref1 = code.split('');
    for (k = 0, len2 = ref1.length; k < len2; k++) {
      t = ref1[k];
      new_string += "<span class='flipfade_span'>" + t + "</span>";
    }
    i.innerHTML = new_string;
  }

  fadeIn = function(e, speed, del) {
    log(speed);
    e.style.transitionDuration = speed;
    log(del);
    delay(del, function() {
      e.style.opacity = 0.9;
    });
  };

  count = 0;

  ref2 = byClass('flipfade_span');
  for (l = 0, len3 = ref2.length; l < len3; l++) {
    i = ref2[l];
    s = i.style;
    count += 1;
    i.style.opacity = 0;
    fadeIn(i, (randInt(1, 3)) + "s", randInt(500, 2000) + (count * 60));
  }

}).call(this);
